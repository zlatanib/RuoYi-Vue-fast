<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.score.mapper.ScoTeacherMapper">

    <resultMap type="ScoTeacher" id="ScoTeacherResult">
        <result property="teacherId"    column="teacher_id"    />
        <result property="teacherName"    column="teacher_name"    />
        <result property="gender"    column="gender"    />
        <result property="phone"    column="phone"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectScoTeacherVo">
        select teacher_id, teacher_name, gender, phone, del_flag, create_by, create_time, update_by, update_time, remark from sco_teacher
    </sql>

    <select id="selectScoTeacherList" parameterType="ScoTeacher" resultMap="ScoTeacherResult">
        <include refid="selectScoTeacherVo"/>
        <where>
            <if test="teacherName != null  and teacherName != ''"> and teacher_name like concat('%', #{teacherName}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
        </where>
    </select>

    <select id="selectScoTeacherByTeacherId" parameterType="Long" resultMap="ScoTeacherResult">
        <include refid="selectScoTeacherVo"/>
        where teacher_id = #{teacherId}
    </select>

    <insert id="insertScoTeacher" parameterType="ScoTeacher" useGeneratedKeys="true" keyProperty="teacherId">
        insert into sco_teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherName != null and teacherName != ''">teacher_name,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="phone != null and phone != ''">phone,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherName != null and teacherName != ''">#{teacherName},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateScoTeacher" parameterType="ScoTeacher">
        update sco_teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="teacherName != null and teacherName != ''">teacher_name = #{teacherName},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where teacher_id = #{teacherId}
    </update>

    <delete id="deleteScoTeacherByTeacherId" parameterType="Long">
        delete from sco_teacher where teacher_id = #{teacherId}
    </delete>

    <delete id="deleteScoTeacherByTeacherIds" parameterType="String">
        delete from sco_teacher where teacher_id in
        <foreach item="teacherId" collection="array" open="(" separator="," close=")">
            #{teacherId}
        </foreach>
    </delete>
</mapper>